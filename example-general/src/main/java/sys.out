class Solution {
    public int rob(int[] nums) {
        int max = 0;
        if(nums.length == 0) {
            return 0;
        }
        if(nums.length == 1) {
            return nums[0];
        }
        if(nums.length == 2) {
            return nums[0] > nums[1] ? nums[0] : nums[1];
        }
        int[] money1 = new int[nums.length];
        money1[0] = nums[0];
        rob(nums, money1, 0, 2, 0);    

        int[] money2 = new int[nums.length];
        money2[1] = nums[1];
        rob(nums, money2, 1, 3, 1);  

        int[] money3 = new int[nums.length];
        money3[2] = nums[2];
        rob(nums, money3, 2, 4, 2);   

        for(int i = 0; i < nums.length; i++) {
            if(max < money1[i]) {
                max = money1[i];
            }
            if(max < money2[i]){
                max = money2[i];
            }
            if(max < money3[i]){
                max = money3[i];
            }
        }

        return max;
    }

    private void rob(int[] nums, int[] money, int pre, int next, int init) {
        if(init == 0 && next >= nums.length - 1 || next >= nums.length) {
            return;
        }
        int temp = money[pre] + nums[next];
        if(temp > money[next]) {
            money[next] = temp;
        }else {
            return;
        }
        rob(nums, money, next, next + 2, init);
        rob(nums, money, next, next + 3, init);
    }

    
}